#!/usr/bin/env node

// SAMPLE
// D.1 === 5000 makes 350

// if () {
// 	console.log("You should pass initial amout and number of days! e.g. 'calc 5000 5'");
// 	return;
// }

if (process.argv.length < 4) {

	console.log(`Usage: 'calc initialAmount amountOfDays [leverage] [dailyPercent] [livingCost]' [] means optional`);
	console.log(`\n\tExample: calc 5000 60 2 0.7 1500`);

	return;
}

Number.prototype.asMoney = function() {
	return `$${parseFloat(this).toFixed(2)}`;
}

const spaces = (n) => {
	str = "";
	for (let i = 0; i < n; i++) { str += " "; }
	return str;
}

const businessDaysInAMonth = 20;

const initialAmount = Number(process.argv[2]);
const amountOfDays 	= Number(process.argv[3]);
const leverage 		= Number(process.argv[4]) || 1;
const dailyPercent 	= Number(process.argv[5]) || 1;

let livingCost 		= Number(process.argv[6]) || 4000;

let amount = initialAmount;	

console.log(`\nGrowing ${dailyPercent}% per day during ${amountOfDays} days.\n`);

let dailyEarning = (amount * leverage) * (dailyPercent / 100);

for (let day = 1; day < amountOfDays + 1; day++)
{	
	console.log(`D.${day} ${spaces(4 - day.toString().length)}=> ${amount.asMoney()} makes ${dailyEarning.asMoney()}`);

	if (day % businessDaysInAMonth === 0) {
		dailyEarning = (amount * leverage) * (dailyPercent / 100);
		console.log(`\nLIVING COST TAKEOUT: -${livingCost.asMoney()}\n`);
		amount -= livingCost;
		livingCost *= 1 + ((dailyPercent * 2) * (day / businessDaysInAMonth) / 100);
	}

	amount += dailyEarning;
}

console.log(`\nTOTAL EQUITY: ${amount.asMoney()}`);
console.log(`TOTAL EQUITY GROWTH: ${(amount - initialAmount).asMoney()}\n`);
